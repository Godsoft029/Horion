#include "CommandBlockExploitCommand.h"

#include "../../../SDK/Tag.h"
#include "../../Module/ModuleManager.h"
#include <thread>

CommandBlockExploitCommand::CommandBlockExploitCommand() : IMCCommand("commandblockexploit", "Workaround for executing commands without op", "[bh || bn || mb || spoof || invis] <command>") {
	registerAlias("cbe");
}

CommandBlockExploitCommand::~CommandBlockExploitCommand() {
}

bool CommandBlockExploitCommand::execute(std::vector<std::string>* args) {
	if (args->at(1) == "bh") {
	assertTrue(args->size() > 3);
	std::ostringstream os;
	for (int i = 2; i < args->size(); i++) {
		if (i > 1)
			os << " ";
		os << args->at(i);
	}
	C_ItemStack* yot = new C_ItemStack(***ItemRegistry::lookUpByName(std::make_unique<uintptr_t>().get(), std::make_unique<uintptr_t>().get(), TextHolder("beehive")), 1, 0);
	int slot = g_Data.getLocalPlayer()->getSupplies()->inventory->getFirstEmptySlot();
	std::string cmd = os.str();
	std::string tag = "{Count:1b,Damage:0s,Name:\"minecraft:beehive\",tag:{Occupants:[{ActorIdentifier:""\"minecraft:command_block_minecart<>""\",SaveData:{Command:\"" + cmd + "\",Persistent:1b,Ticking:1b,TicksLeftToStay:0}}],ench:[{id:28s,lvl:1s}],display:{Lore:[""\"Â§bÂ§lBy Horion Client""\"],Name:""\"Â§gÂ§lCommand Beehive""\"}}";
	yot->fromTag(*Mojangson::parseTag(tag));
	g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(0, nullptr, nullptr, yot, nullptr, 1, 507, 99999));
	//g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(slot, nullptr, yot));
	g_Data.getLocalPlayer()->getSupplies()->inventory->addItemToFirstEmptySlot(yot);
	clientMessageF("[%sHorion%s] %sPlace the beehive to spawn a command block minecart with a command already inside!", GOLD, WHITE, GREEN);
	return true;
	}

	if (args->at(1) == "bn") {
	assertTrue(args->size() > 3);
	std::ostringstream os;
	for (int i = 2; i < args->size(); i++) {
		if (i > 1)
			os << " ";
		os << args->at(i);
	}
	C_ItemStack* yot = new C_ItemStack(***ItemRegistry::lookUpByName(std::make_unique<uintptr_t>().get(), std::make_unique<uintptr_t>().get(), TextHolder("bee_nest")), 1, 0);
	int slot = g_Data.getLocalPlayer()->getSupplies()->inventory->getFirstEmptySlot();
	std::string cmd = os.str();
	std::string tag = "{Count:1b,Damage:0s,Name:\"minecraft:bee_nest\",tag:{Occupants:[{ActorIdentifier:""\"minecraft:command_block_minecart<>""\",SaveData:{Command:\"" + cmd + "\",Persistent:1b,Ticking:1b,TicksLeftToStay:0}}],ench:[{id:28s,lvl:1s}],display:{Lore:[""\"Â§bÂ§lBy Horion Client""\"],Name:""\"Â§gÂ§lCommand Bee Nest""\"}}";
	yot->fromTag(*Mojangson::parseTag(tag));
	g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(0, nullptr, nullptr, yot, nullptr, 1, 507, 99999));
	//g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(slot, nullptr, yot));
	g_Data.getLocalPlayer()->getSupplies()->inventory->addItemToFirstEmptySlot(yot);
	clientMessageF("[%sHorion%s] %sPlace the beenest to spawn a command block minecart with a command already inside!", GOLD, WHITE, GREEN);
	return true;
	}

	if (args->at(1) == "mb") {
	assertTrue(args->size() > 3);
	std::ostringstream os;
	for (int i = 2; i < args->size(); i++) {
		if (i > 1)
			os << " ";
		os << args->at(i);
	}
	C_ItemStack* yot = new C_ItemStack(***ItemRegistry::lookUpByName(std::make_unique<uintptr_t>().get(), std::make_unique<uintptr_t>().get(), TextHolder("movingblock")), 1, 0);
	int slot = g_Data.getLocalPlayer()->getSupplies()->inventory->getFirstEmptySlot();
	std::string cmd = os.str();
	std::string tag = "{Count:1b,Damage:0s,Name:\"minecraft:movingblock\",tag:{movingEntity:{id:""\"Beehive""\",Occupants:[{ActorIdentifier:""\"minecraft:command_block_minecart<>""\",SaveData:{Command:\"" + cmd + "\",Persistent:1b,Ticking:1b,TicksLeftToStay:0}}]},pistonPosX:0,movingBlock:{name:""\"minecraft:bee_nest""\"},pistonPosY:0,pistonPosZ:0,ench:[{id:28s,lvl:1s}],display:{Name:""\"Â§gÂ§lCommand Beenest Bypass""\",Lore:[""\"Â§bÂ§lby Horion Client""\"]}}}";
	yot->fromTag(*Mojangson::parseTag(tag));
	g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(0, nullptr, nullptr, yot, nullptr, 1, 507, 99999));
	//g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(slot, nullptr, yot));
	g_Data.getLocalPlayer()->getSupplies()->inventory->addItemToFirstEmptySlot(yot);
	clientMessageF("[%sHorion%s] %sPlace the movingblock to spawn a command block minecart with a command already inside!", GOLD, WHITE, GREEN);
	return true;
	}

	if (args->at(1) == "spoof") {
	assertTrue(args->size() > 3);
	std::ostringstream os;
	for (int i = 2; i < args->size(); i++) {
		if (i > 1)
			os << " ";
		os << args->at(i);
	}
	C_ItemStack* yot = new C_ItemStack(***ItemRegistry::lookUpByName(std::make_unique<uintptr_t>().get(), std::make_unique<uintptr_t>().get(), TextHolder("movingblock")), 1, 0);
	int slot = g_Data.getLocalPlayer()->getSupplies()->inventory->getFirstEmptySlot();
	std::string cmd = os.str();
	std::string tag = "{Count:1b,Damage:0s,Name:\"minecraft:movingblock\",tag:{movingEntity:{id:""\"Beehive""\",Occupants:[{ActorIdentifier:""\"minecraft:command_block_minecart<>""\",SaveData:{Command:\"" + cmd + "\",definitions:[""\"+minecraft:bee""\"],identifier:""\"minecraft:command_block_minecart""\",Persistent:1b,Ticking:1b,TicksLeftToStay:1}}]},pistonPosX:0,movingBlock:{name:""\"minecraft:bee_nest""\"},pistonPosY:0,pistonPosZ:0,ench:[{id:28s,lvl:1s}],display:{Name:""\"Â§gÂ§lCommand Beenest Spoofed""\",Lore:[""\"Â§bÂ§lby Horion Client""\"]}}}";
	yot->fromTag(*Mojangson::parseTag(tag));
	g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(0, nullptr, nullptr, yot, nullptr, 1, 507, 99999));
	//g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(slot, nullptr, yot));
	g_Data.getLocalPlayer()->getSupplies()->inventory->addItemToFirstEmptySlot(yot);
	clientMessageF("[%sHorion%s] %sPlace the movingblock to spawn a spoofed command block minecart as a bee with a command already inside!", GOLD, WHITE, GREEN);
	return true;
	}

	if (args->at(1) == "invis") {
	assertTrue(args->size() > 3);
	std::ostringstream os;
	for (int i = 2; i < args->size(); i++) {
		if (i > 1)
			os << " ";
		os << args->at(i);
	}
	C_ItemStack* yot = new C_ItemStack(***ItemRegistry::lookUpByName(std::make_unique<uintptr_t>().get(), std::make_unique<uintptr_t>().get(), TextHolder("movingblock")), 1, 0);
	int slot = g_Data.getLocalPlayer()->getSupplies()->inventory->getFirstEmptySlot();
	std::string cmd = os.str();
	std::string tag = "{Count:1b,Damage:0s,Name:\"minecraft:movingblock\",tag:{movingEntity:{id:""\"Beehive""\",Occupants:[{ActorIdentifier:""\"minecraft:command_block_minecart<>""\",SaveData:{Command:\"" + cmd + "\",definitions:[""\"+minecraft:moving_block""\"],identifier:""\"minecraft:command_block_minecart""\",Persistent:1b,Ticking:1b,TicksLeftToStay:1}}]},pistonPosX:0,movingBlock:{name:""\"minecraft:air""\"},pistonPosY:0,pistonPosZ:0,ench:[{id:28s,lvl:1s}],display:{Name:""\"Â§gÂ§lInvisible Command Beenest Spoofed""\",Lore:[""\"Â§bÂ§lby Horion Client""\"]}}}";
	yot->fromTag(*Mojangson::parseTag(tag));
	g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(0, nullptr, nullptr, yot, nullptr, 1, 507, 99999));
	//g_Data.getLocalPlayer()->getTransactionManager()->addInventoryAction(C_InventoryAction(slot, nullptr, yot));
	g_Data.getLocalPlayer()->getSupplies()->inventory->addItemToFirstEmptySlot(yot);
	clientMessageF("[%sHorion%s] %sPlace the movingblock to spawn a invisible command block minecart with a command already inside!", GOLD, WHITE, GREEN);
	return true;
	}

}
